{"version":3,"sources":["components/LottoBoard.js","components/LottoPanels.js","App.js","index.js"],"names":["numbers","NumField","selected","num","mousedown","boardid","className","onMouseDown","LottoBoard","cost","id","click","nummousedown","numsSelected","numType","selectrandom","allNrs","map","number","key","indexOf","length","onClick","costreturn","AddNewBoardPanel","clickremove","noCash","ResultPanel","props","winningNums","three","four","five","six","cashWon","peopleWon","close","numbersDraw","msg","LottoApp","state","everBoard","cash","cashForCurrentBoards","boards","noMoney","cumulation","Math","floor","random","drawingStarted","initialState","addNewBoard","e","parseInt","target","getAttribute","moneyCost","setState","err","removeBoard","which","boardList","c","filter","b","removeAllBoards","handleRestartGame","startDrawing","match3","match4","match5","match6","moneyWon","everythingSelected","listOfBoardNums","randomDrawNums","results","verified","push","i","j","result","ver","winningNumbers","closeDrawingTable","handleNumMouseDown","innerText","theBoard","arrSelected","splice","selectRandom","arr","type","onKeyPress","preventDefault","lottoBoards","this","board","toLocaleString","React","Component","ReactDOM","render","App","document","getElementById"],"mappings":"kRAEMA,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAChC,GAAI,GAAI,GAAI,IAERC,EAAW,SAAC,GAAD,IAAEC,EAAF,EAAEA,SAAUC,EAAZ,EAAYA,IAAKC,EAAjB,EAAiBA,UAAWC,EAA5B,EAA4BA,QAA5B,OACf,0BAAMA,QAASA,EAASC,UAAWJ,EAAW,SAAW,KAAMK,YAAaH,GAAYD,IAsC3EK,EAnCI,SAAC,GAA0E,IAAzEC,EAAwE,EAAxEA,KAAMC,EAAkE,EAAlEA,GAAIC,EAA8D,EAA9DA,MAAOC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,aAEpEC,EAAShB,EAAQiB,KAAI,SAAAC,GAC1B,OACC,kBAAC,EAAD,CAAUd,UAAWQ,EACjBO,IAAG,UAAKT,EAAL,YAAWQ,GACdf,IAAKe,EACLhB,SAAUW,EAAaO,QAAQF,IAAW,EAC1Cb,QAASK,OAKf,OACC,yBAAKJ,UAAU,cACd,4BAAI,gCAASQ,GAAb,kBACCE,EACD,kDAAiBH,EAAaQ,OAA9B,YAAwCP,IACxC,4BAAQR,UAAU,UAChBgB,QAASP,EACTV,QAASK,EACTP,IAAKW,GAHP,iBAMA,4BAAQR,UAAU,UAChBiB,WAAYd,EACZJ,QAASK,EACTY,QAASX,GAHX,uBCnCGa,EAAmB,SAAC,GAAD,IAAEb,EAAF,EAAEA,MAAOc,EAAT,EAASA,YAAaC,EAAtB,EAAsBA,OAAtB,OACrB,yBAAKpB,UAAU,eACX,+CACA,4BAAQA,UAAU,eACVG,KAAK,IACLN,IAAI,IACJmB,QAASX,GAHjB,kBAOA,4BAAQL,UAAU,eACVG,KAAK,KACLN,IAAI,KACJmB,QAASX,GAHjB,oBAOA,4BAAQL,UAAU,eACVG,KAAK,KACLN,IAAI,KACJmB,QAASX,GAHjB,oBAOA,4BAAQL,UAAU,SACVgB,QAASG,GADjB,qBAICC,EAAS,uBAAGpB,UAAU,WAAb,qBAA+C,OAK3DqB,EAAc,SAACC,GAAW,IAAD,EAEMA,EAAMC,YAAhCC,EAFoB,EAEpBA,MAAOC,EAFa,EAEbA,KAAMC,EAFO,EAEPA,KAAMC,EAFC,EAEDA,IACnBC,EAA0CN,EAA1CM,QAASC,EAAiCP,EAAjCO,UAAWC,EAAsBR,EAAtBQ,MAAOC,EAAeT,EAAfS,YAC9BC,EAAM,GAYV,OAVIL,EACAK,EAAM,0BACCN,EACPM,EAAM,0BACCP,EACPO,EAAM,sBACCR,IACPQ,EAAM,0BAIN,yBAAKhC,UAAU,2BACX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,sBACX,4BAAKwB,GAASC,GAAQC,GAAQC,EAAM,mBAAqB,YACzD,wBAAI3B,UAAU,gBAAgBgC,GAAY,sCACzCL,EAAM,wBAAI3B,UAAU,sCAAqC,mCAAnD,4CAAoG2B,EAApG,iBAAgHA,EAAM,EAAI,IAAM,KAAc,KACpJD,EAAO,wBAAI1B,UAAU,sCAAqC,mCAAnD,4CAAoG0B,EAApG,iBAAiHA,EAAO,EAAI,IAAM,KAAc,KACvJD,EAAO,wBAAIzB,UAAU,sCAAqC,mCAAnD,4CAAoGyB,EAApG,iBAAiHA,EAAO,EAAI,IAAM,KAAc,KACvJD,EAAQ,wBAAIxB,UAAU,sCAAqC,mCAAnD,4CAAoGwB,EAApG,iBAAkHA,EAAQ,EAAI,IAAM,KAAc,KAC1JI,EAAU,wBAAI5B,UAAU,0BAAd,sBAAuD4B,EAAvD,MAA0E,KACpFC,EAAY,sCAAQA,EAAR,0BAAiD,4BAAK,uCACnE,4BAAQ7B,UAAU,UAAUgB,QAASc,GAArC,mBAEJ,yBAAK9B,UAAU,wBACX,8BAAO+B,EAAY,IACnB,8BAAOA,EAAY,IACnB,8BAAOA,EAAY,IACnB,8BAAOA,EAAY,IACnB,8BAAOA,EAAY,IACnB,8BAAOA,EAAY,QC+NxBE,E,6MA/RdC,O,GACCC,UAAW,EACXC,KAAM,IACNC,qBAAsB,EACtBT,QAAS,EACTU,OAAQ,GACRC,SAAS,EACTC,WAAYC,KAAKC,MAAM,IAAS,IAASD,KAAKE,UAC9CC,gBAAgB,EAChBb,YAAa,GACbF,UAAW,G,0BACA,G,+BACK,CACfL,MAAO,EACPC,KAAM,EACNC,KAAM,EACNC,IAAK,I,oBAED,I,KAGNkB,aAAe,EAAKX,M,EAEpBY,YAAc,SAACC,GAEd,IAAMvC,EAAUwC,SAASD,EAAEE,OAAOC,aAAa,QAC5CC,EAAYH,SAASD,EAAEE,OAAOC,aAAa,SAE1C,EAAKhB,MAAME,MAAQe,EACtB,EAAKC,SAAS,CACbd,OAAO,GAAD,mBAAM,EAAKJ,MAAMI,QAAjB,CAAyB,CAC9BlC,GAAI,EAAK8B,MAAMC,UACf3B,QAASA,EACTL,KAAMgD,EACN5C,aAAc,MAEf8B,qBAAsB,EAAKH,MAAMG,qBAAuBc,EACxDf,KAAM,EAAKF,MAAME,KAAOe,EACxBZ,SAAS,EACTJ,UAAW,EAAKD,MAAMC,UAAY,EAClCkB,IAAK,KAGN,EAAKD,SAAS,CACbb,SAAS,K,EAMZe,YAAc,SAACP,GAEd,IAAMQ,EAAQP,SAASD,EAAEE,OAAOC,aAAa,YAC1CM,EAAY,EAAKtB,MAAMI,OACvBmB,EAAIT,SAASD,EAAEE,OAAOC,aAAa,eAEtC,EAAKE,SAAS,CACZd,OAAQkB,EAAUE,QAAO,SAAAC,GAAC,OAAIA,EAAEvD,KAAOmD,KACvCnB,KAAM,EAAKF,MAAME,KAAOqB,EACxBpB,qBAAsB,EAAKH,MAAMG,qBAAuBoB,K,EAI3DG,gBAAkB,WAEjB,EAAKR,SAAS,CACbd,OAAQ,GACRF,KAAM,EAAKF,MAAME,KAAO,EAAKF,MAAMG,qBACnCA,qBAAsB,EACtBF,UAAW,EACXkB,IAAK,M,EAIPQ,kBAAoB,WACnB,EAAKT,SAAS,EAAKP,e,EAGpBiB,aAAe,WAUd,IARA,IAKCC,EAAQC,EAAQC,EAAQC,EACxBC,EAAUC,EANLC,EAAkB,EAAKnC,MAAMI,OAAO3B,KAAI,SAAAgD,GAAC,OAAIA,EAAEpD,gBAClD+D,EAAiB,GACjBC,EAAU,GAETC,EAAW,GAEgB3C,EAAYY,KAAKC,MAAsB,IAAhBD,KAAKE,UAEpD2B,EAAevD,OAAS,GAAG,CACjC,IAAIlB,EAAM,EAAI4C,KAAKC,MAAsB,KAAhBD,KAAKE,WACM,IAAjC2B,EAAexD,QAAQjB,IACzByE,EAAeG,KAAK5E,GAItB,IAAK,IAAI6E,EAAI,EAAGA,EAAIL,EAAgBtD,OAAQ2D,IAAK,CAChDH,EAAQG,GAAK,EACb,IAAI,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACjBN,EAAgBK,GAAG5D,QAAQwD,EAAeK,KAAO,GACpDJ,EAAQG,KAMXX,GADAS,EAAWD,EAAQb,QAAO,SAAAkB,GAAM,OAAIA,GAAU,MAC5BlB,QAAO,SAAAmB,GAAG,OAAY,IAARA,KAAW9D,OAC3CiD,EAASQ,EAASd,QAAO,SAAAmB,GAAG,OAAY,IAARA,KAAW9D,OAC3CkD,EAASO,EAASd,QAAO,SAAAmB,GAAG,OAAY,IAARA,KAAW9D,QAC3CmD,EAASM,EAASd,QAAO,SAAAmB,GAAG,OAAY,IAARA,KAAW9D,SAK1Cc,IACAsC,EAAW,EAAKjC,MAAML,UAAY,EAAKK,MAAMM,WAAa,EAAKN,MAAML,UAAY,EAAKK,MAAMM,YAH5F2B,EAAW,EAAKjC,MAAMM,YAAuB,MAATwB,EAA4B,KAATC,GAA2B,GAATF,EAM1EK,EAAqB,EACrB,IAAI,IAAIM,EAAI,EAAGA,EAAIL,EAAgBtD,OAAQ2D,IAC1CN,EAAqBC,EAAgBK,GAAG3D,OAASqD,EAAqB,EAAIA,EAGxEA,IAAuBC,EAAgBtD,QAAUsD,EAAgBtD,OACnE,EAAKqC,SAAS,CACb0B,eAAgB,CACftD,MAAOuC,EACPtC,KAAMuC,EACNtC,KAAMuC,EACNtC,IAAKuC,GAEN9B,KAAM,EAAKF,MAAME,KAAO,EAAKF,MAAMG,qBAAuBI,KAAKC,MAAMyB,GACrEvC,QAASa,KAAKC,MAAMyB,GACpB3B,WAAYX,GAAaqC,EAASzB,KAAKC,MAAM,IAAU,IAASD,KAAKE,UAAY,EAAKT,MAAMM,WAAaC,KAAKC,MAAM,IAAU,IAASD,KAAKE,UAC5IC,gBAAgB,EAChBb,YAAauC,EACbzC,UAAWY,KAAKC,MAAMb,GACtBwB,IAAK,KAGN,EAAKD,SAAS,CACbC,IAAK,4B,EAKR0B,kBAAoB,WACf,EAAK7C,MAAME,KAAO,EACrB,EAAKgB,SAAS,CACbd,OAAQ,GACRF,KAAM,EAAKF,MAAME,KAAO,EAAKF,MAAMG,qBAAuB,EAAKH,MAAMN,QACrES,qBAAsB,EACtBO,gBAAgB,EAChBS,IAAK,qEACLxB,UAAW,IAIb,EAAKuB,SAAS,CACbR,gBAAgB,K,EAIlBoC,mBAAqB,SAAAjC,GAEpB,IAAMnD,EAAWoD,SAASD,EAAEE,OAAOgC,WAC/BzB,EAAY,EAAKtB,MAAMI,OACxBiB,EAAQP,SAASD,EAAEE,OAAOC,aAAa,YACvCgC,EAAW1B,EAAUE,QAAO,SAAAC,GAAC,OAAIA,EAAEvD,KAAOmD,KACzC4B,EAAcD,EAAS,GAAG3E,aAE9B,GAAI4E,EAAYpE,SAAWmE,EAAS1E,UACG,IAAnC2E,EAAYrE,QAAQlB,GACtB,OAAO,MAI8B,IAAnCuF,EAAYrE,QAAQlB,GACvBuF,EAAYV,KAAK7E,GAEjBuF,EAAYC,OAAOD,EAAYrE,QAAQlB,GAAW,GAGnD4D,EAAU7C,KAAI,SAAAgD,GAIb,OAHIA,EAAEvD,KAAOmD,IACZI,EAAEpD,aAAe4E,GAEXxB,KAGR,EAAKP,SAAS,CACbd,OAAQkB,K,EAIV6B,aAAe,SAACtC,GAOf,IANA,IAAMuC,EAAM,GACT9B,EAAY,EAAKtB,MAAMI,OACvBiB,EAAQP,SAASD,EAAEE,OAAOC,aAAa,YACvCqC,EAAOvC,SAASD,EAAEE,OAAOC,aAAa,QACrCwB,EAAI,EAEFA,EAAIa,GAAM,CACf,IAAI1F,EAAM4C,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,IACjB,IAAtB2C,EAAIxE,QAAQjB,KACdyF,EAAIb,KAAK5E,GACT6E,KAIFlB,EAAU7C,KAAI,SAAAgD,GAIb,OAHIA,EAAEvD,KAAOmD,IACZI,EAAEpD,aAAe+E,GAEX3B,KAGR,EAAKP,SAAS,CACbd,OAAQkB,K,EAIVgC,WAAa,SAACzC,GACM,KAAZA,EAAEQ,QACJR,EAAE0C,iBACE,EAAKvD,MAAMU,gBACb,EAAKmC,sB,wEAKH,IAAD,OAEJW,EAAc,GAFV,EAG2GC,KAAKzD,MAAhHE,EAHA,EAGAA,KAAMI,EAHN,EAGMA,WAAYa,EAHlB,EAGkBA,IAAKd,EAHvB,EAGuBA,QAASuC,EAHhC,EAGgCA,eAAgB/C,EAHhD,EAGgDA,YAAaF,EAH7D,EAG6DA,UAAWD,EAHxE,EAGwEA,QAASgB,EAHjF,EAGiFA,eAAgBN,EAHjG,EAGiGA,OAczG,OAZIA,EAAOvB,SAEV2E,EAAcpD,EAAO3B,KAAK,SAACiF,GAAD,OACxB,kBAAC,EAAD,eAAY/E,IAAK+E,EAAMxF,GACpBC,MAAO,EAAKiD,YACZhD,aAAc,EAAK0E,mBACnBvE,aAAc,EAAK4E,cACfO,QAMT,yBAAK5F,UAAU,SACd,yBAAKA,UAAU,iBACd,0CAAe,0BAAMA,UAAU,WAAhB,iBAAf,SACA,4IACA,kFACA,qDACA,4BACC,+DACA,gFACA,8EACA,mHAED,+CAAqBoC,EAAKyD,iBAA1B,KACA,2BAAG,gCAAQ,6DAAmCrD,EAAWqD,iBAA9C,OACX,4BAAQ7F,UAAU,UAAUwF,WAAYG,KAAKH,WACtCxE,QAAS2E,KAAK7B,cADrB,iBAIA,4BAAQ9D,UAAU,SAASgB,QAAS2E,KAAK9B,mBAAzC,gBACCR,EAAM,uBAAGrD,UAAU,SAASqD,GAAW,MAEzC,6BACCqC,EACD,kBAAC,EAAD,CAAkBtE,OAAQmB,EAAU,IAAM,KACnClC,MAAOsF,KAAK7C,YACb3B,YAAawE,KAAK/B,kBAEvBhB,EAAiB,kBAAC,EAAD,CAAad,MAAO6D,KAAKZ,kBAChCxD,YAAauD,EACb/C,YAAaA,EACbF,UAAWA,EACXD,QAASA,IAElB,U,GA3RiBkE,IAAMC,WCA7BC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a9e7c597.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9,\r\n\t\t10, 11, 12, 13, 14, 15, 16, 17, 18,\r\n\t\t19, 20, 21, 22, 23, 24, 25, 26, 27,\r\n\t\t28, 29, 30, 31, 32, 33, 34, 35, 36,\r\n\t\t37, 38, 39, 40, 41, 42, 43, 44, 45,\r\n\t\t46, 47, 48, 49]\r\n\r\nconst NumField = ({selected, num, mousedown, boardid}) => (\r\n\t\t<span boardid={boardid} className={selected ? \"active\" : null} onMouseDown={mousedown}>{num}</span>\r\n)\r\n\r\nconst LottoBoard = ({cost, id, click, nummousedown, numsSelected, numType, selectrandom}) => {\r\n\r\n\tconst allNrs = numbers.map(number => {\r\n\t\treturn (\r\n\t\t\t<NumField mousedown={nummousedown} \r\n\t\t\t\t\t  key={`${id}-${number}`} \r\n\t\t\t\t\t  num={number} \r\n\t\t\t\t\t  selected={numsSelected.indexOf(number) >= 0 ? true : false}\r\n\t\t\t\t\t  boardid={id} \r\n\t\t\t/>\r\n\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div className=\"LottoBoard\">\r\n\t\t\t<h3><strong>{numType}</strong> numbers board</h3>\r\n\t\t\t{allNrs}\r\n\t\t\t<p>Selected: {`${numsSelected.length}/${numType}`}</p>\r\n\t\t\t<button className=\"confirm\" \r\n\t\t\t\t\tonClick={selectrandom} \r\n\t\t\t\t\tboardid={id}\r\n\t\t\t\t\tnum={numType}>\r\n\t\t\t\t\t\tSelect random\r\n\t\t\t</button>\r\n\t\t\t<button className=\"warning\" \r\n\t\t\t\t\tcostreturn={cost}\t\t\t\t\t\r\n\t\t\t\t\tboardid={id} \t\t\t\t\t\r\n\t\t\t\t\tonClick={click}>\r\n\t\t\t\t\t\tRemove this board\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\nexport default LottoBoard","import React from 'react'\r\n\r\nconst AddNewBoardPanel = ({click, clickremove, noCash}) => (\r\n    <div className=\"addNewBoard\">\r\n        <p>Buy a new board:</p>\r\n        <button className=\"notification\"\r\n                cost=\"1\" \r\n                num=\"6\" \r\n                onClick={click}\r\n        >\r\n            6 numbers (1$)\r\n        </button>\r\n        <button className=\"notification\"\r\n                cost=\"10\" \r\n                num=\"10\" \r\n                onClick={click}\r\n        >\r\n            10 numbers (10$)\r\n        </button>\r\n        <button className=\"notification\"\r\n                cost=\"30\" \r\n                num=\"15\" \r\n                onClick={click}\r\n        >\r\n            15 numbers (30$)\r\n        </button>\r\n        <button className=\"danger\" \r\n                onClick={clickremove}>\r\n            Remove All boards\r\n        </button>\r\n        {noCash ? <p className=\"warning\">Not enough money!</p> : null}\r\n    </div>\r\n)\r\n\r\n\r\nconst ResultPanel = (props) => {\r\n\r\n    const {three, four, five, six} = props.winningNums\r\n    const {cashWon, peopleWon, close, numbersDraw} = props\r\n    let msg = ''\r\n\r\n    if (six) {\r\n        msg = 'You are rich now, RICH!'\r\n    } else if (five) {\r\n        msg = 'You won a lot of money!'\r\n    } else if (four) {\r\n        msg = 'You won some money!'\r\n    } else if (three) {\r\n        msg = 'You won a bit of money'\r\n    }\r\n\r\n    return (\r\n        <div className=\"drawing-table-container\">\r\n            <div className=\"drawing-table\">\r\n                <div className=\"drawing-table-info\">\r\n                    <h2>{three || four || five || six ? 'Congratulations!' : 'No luck!'}</h2>\r\n                    <h3 className=\"notification\">{msg ? msg : 'You did not win anything this time'}</h3>\r\n                    {six ? <h3 className='drawing-result notification result'><span>6</span> {`numbers have been matched in: ${six} board${six > 1 ? 's' : ''}` }</h3> : null}\r\n                    {five ? <h3 className='drawing-result notification result'><span>5</span> {`numbers have been matched in: ${five} board${five > 1 ? 's' : ''}` }</h3> : null}\r\n                    {four ? <h3 className='drawing-result notification result'><span>4</span> {`numbers have been matched in: ${four} board${four > 1 ? 's' : ''}` }</h3> : null}\r\n                    {three ? <h3 className='drawing-result notification result'><span>3</span> {`numbers have been matched in: ${three} board${three > 1 ? 's' : ''}` }</h3> : null}\r\n                    {cashWon ? <h2 className='drawing-result confirm'>{`So you won: ${cashWon}$`}</h2> : null}\r\n                    {peopleWon ? <h4>{`${peopleWon} of players matched 6`}</h4> : <h4>{'Nobody matched 6. Cumulation rises!'}</h4>}\r\n                    <button className=\"confirm\" onClick={close}>Return to game</button>\r\n                </div>\r\n                <div className=\"drawing-table-result\">\r\n                    <span>{numbersDraw[0]}</span>\r\n                    <span>{numbersDraw[1]}</span>\r\n                    <span>{numbersDraw[2]}</span>\r\n                    <span>{numbersDraw[3]}</span>\r\n                    <span>{numbersDraw[4]}</span>\r\n                    <span>{numbersDraw[5]}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {AddNewBoardPanel, ResultPanel}\r\n","import React from 'react'\r\nimport LottoBoard from './components/LottoBoard.js'\r\nimport {AddNewBoardPanel, ResultPanel} from './components/LottoPanels.js'\r\n\r\n\r\nclass LottoApp extends React.Component {\r\n\r\n\tstate =  {\r\n\t\teverBoard: 0,\r\n\t\tcash: 500,\r\n\t\tcashForCurrentBoards: 0,\r\n\t\tcashWon: 0,\r\n\t\tboards: [],\r\n\t\tnoMoney: false,\r\n\t\tcumulation: Math.floor(800000 + 800000 * Math.random()),\r\n\t\tdrawingStarted: false,\r\n\t\tnumbersDraw: [],\r\n\t\tpeopleWon: 0,\r\n\t\teverBoard: 0,\r\n\t\twinningNumbers: {\r\n\t\t\tthree: 0,\r\n\t\t\tfour: 0,\r\n\t\t\tfive: 0,\r\n\t\t\tsix: 0\r\n\t\t},\r\n\t\terr: ''\r\n\t}\r\n\r\n\tinitialState = this.state\r\n\r\n\taddNewBoard = (e) => {\r\n\r\n\t\tconst numType = parseInt(e.target.getAttribute('num')),\r\n\t\t\t  moneyCost = parseInt(e.target.getAttribute('cost'))\r\n\r\n\t\tif (this.state.cash >= moneyCost) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tboards: [...this.state.boards, {\r\n\t\t\t\t\tid: this.state.everBoard,\r\n\t\t\t\t\tnumType: numType,\r\n\t\t\t\t\tcost: moneyCost,\r\n\t\t\t\t\tnumsSelected: [],\r\n\t\t\t\t}],\r\n\t\t\t\tcashForCurrentBoards: this.state.cashForCurrentBoards + moneyCost,\r\n\t\t\t\tcash: this.state.cash - moneyCost,\r\n\t\t\t\tnoMoney: false,\r\n\t\t\t\teverBoard: this.state.everBoard + 1,\r\n\t\t\t\terr: ''\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tnoMoney: true\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tremoveBoard = (e) => {\r\n\r\n\t\tconst which = parseInt(e.target.getAttribute('boardid')),\r\n\t\t\t  boardList = this.state.boards,\t\r\n\t\t\t  c = parseInt(e.target.getAttribute('costreturn'))\r\n\t\r\n\t\tthis.setState({\r\n\t\t\t\tboards: boardList.filter(b => b.id !== which),\r\n\t\t\t\tcash: this.state.cash + c,\r\n\t\t\t\tcashForCurrentBoards: this.state.cashForCurrentBoards - c\r\n\t\t\t})\r\n\t}\r\n\r\n\tremoveAllBoards = () => { \r\n\r\n\t\tthis.setState({\r\n\t\t\tboards: [],\r\n\t\t\tcash: this.state.cash + this.state.cashForCurrentBoards,\r\n\t\t\tcashForCurrentBoards: 0,\r\n\t\t\teverBoard: 0,\r\n\t\t\terr: ''\r\n\t\t})\r\n\t}\r\n\r\n\thandleRestartGame = () => {\r\n\t\tthis.setState(this.initialState)\r\n\t}\r\n\r\n\tstartDrawing = () => {\r\n\t\t\r\n\t\tconst listOfBoardNums = this.state.boards.map(b => b.numsSelected),\r\n\t\t\t  randomDrawNums = [],\r\n\t\t\t  results = []\r\n\r\n\t\tlet verified = [],\r\n\t\t\tmatch3, match4, match5, match6, \r\n\t\t\tmoneyWon, everythingSelected, peopleWon = Math.floor(Math.random() * 2.1)\r\n\r\n\t\twhile (randomDrawNums.length < 6) {\r\n\t\t\tlet num = 1 + Math.floor(Math.random() * 48.9)\r\n\t\t\tif(randomDrawNums.indexOf(num) === -1) { \r\n\t\t\t\trandomDrawNums.push(num)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < listOfBoardNums.length; i++) {\r\n\t\t\tresults[i] = 0\r\n\t\t\tfor(let j = 0; j < 7; j++) {\r\n\t\t\t\tif (listOfBoardNums[i].indexOf(randomDrawNums[j]) >= 0) {\r\n\t\t\t\t\tresults[i]++\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tverified = results.filter(result => result >= 3)\r\n\t\tmatch3 = verified.filter(ver => ver === 3).length\r\n\t\tmatch4 = verified.filter(ver => ver === 4).length\r\n\t\tmatch5 = verified.filter(ver => ver === 5).length\r\n\t\tmatch6 = verified.filter(ver => ver === 6).length\r\n\r\n\t\tif (!match6) {\r\n\t\t\tmoneyWon = this.state.cumulation * (match4 * 0.00025 + match5 * 0.005) + match3 * 10\r\n\t\t} else {\r\n\t\t\tpeopleWon++\r\n\t\t\tmoneyWon = this.state.peopleWon ? this.state.cumulation / this.state.peopleWon : this.state.cumulation\r\n\t\t}\r\n\t\t\r\n\t\teverythingSelected = 0\r\n\t\tfor(let i = 0; i < listOfBoardNums.length; i++) {\r\n\t\t\teverythingSelected = listOfBoardNums[i].length ? everythingSelected + 1 : everythingSelected\r\n\t\t}\r\n\r\n\t\tif(everythingSelected === listOfBoardNums.length && listOfBoardNums.length) {\r\n\t\t\tthis.setState({\r\n\t\t\t\twinningNumbers: {\r\n\t\t\t\t\tthree: match3,\r\n\t\t\t\t\tfour: match4,\r\n\t\t\t\t\tfive: match5,\r\n\t\t\t\t\tsix: match6\r\n\t\t\t\t},\r\n\t\t\t\tcash: this.state.cash - this.state.cashForCurrentBoards + Math.floor(moneyWon),\r\n\t\t\t\tcashWon: Math.floor(moneyWon),\r\n\t\t\t\tcumulation: peopleWon || match6 ? Math.floor(1000000 + 800000 * Math.random()) : this.state.cumulation + Math.floor(1000000 + 800000 * Math.random()),\r\n\t\t\t\tdrawingStarted: true,\r\n\t\t\t\tnumbersDraw: randomDrawNums,\r\n\t\t\t\tpeopleWon: Math.floor(peopleWon),\r\n\t\t\t\terr: ''\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terr: 'Please, select numbers'\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tcloseDrawingTable = () => {\r\n\t\tif (this.state.cash < 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tboards: [],\r\n\t\t\t\tcash: this.state.cash + this.state.cashForCurrentBoards + this.state.cashWon,\r\n\t\t\t\tcashForCurrentBoards: 0,\r\n\t\t\t\tdrawingStarted: false,\r\n\t\t\t\terr: 'Not enough cash to buy next same amount of boards for next drawing',\r\n\t\t\t\tpeopleWon: 0\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\t\tthis.setState({\r\n\t\t\tdrawingStarted: false\r\n\t\t})\t\r\n\t}\r\n\r\n\thandleNumMouseDown = e => {\r\n\r\n\t\tconst selected = parseInt(e.target.innerText),\r\n\t\t \t  boardList = this.state.boards,\r\n\t\t\t  which = parseInt(e.target.getAttribute(\"boardid\")),\r\n\t\t\t  theBoard = boardList.filter(b => b.id === which)\r\n\t\tlet arrSelected = theBoard[0].numsSelected\r\n\r\n\t\tif (arrSelected.length === theBoard.numType) {\r\n\t\t\tif(arrSelected.indexOf(selected) === -1) {\r\n\t\t\t\treturn null\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (arrSelected.indexOf(selected) === -1) {\r\n\t\t\tarrSelected.push(selected)\r\n\t\t} else {\r\n\t\t\tarrSelected.splice(arrSelected.indexOf(selected), 1)\r\n\t\t}\r\n\r\n\t\tboardList.map(b => {\r\n\t\t\tif (b.id === which) {\r\n\t\t\t\tb.numsSelected = arrSelected\r\n\t\t\t}\r\n\t\t\treturn b\r\n\t\t})\r\n\r\n\t\tthis.setState({\r\n\t\t\tboards: boardList\r\n\t\t})\r\n\t}\r\n\r\n\tselectRandom = (e) => {\r\n\t\tconst arr = [],\r\n\t\t\t  boardList = this.state.boards,\r\n\t\t\t  which = parseInt(e.target.getAttribute(\"boardid\")),\r\n\t\t\t  type = parseInt(e.target.getAttribute(\"num\"))\r\n\t\tlet i = 0\r\n\r\n\t\twhile(i < type) {\r\n\t\t\tlet num = Math.floor(Math.random() * 49 + 1)\r\n\t\t\tif(arr.indexOf(num) === -1) {\r\n\t\t\t\tarr.push(num)\r\n\t\t\t\ti++\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tboardList.map(b => {\r\n\t\t\tif (b.id === which) {\r\n\t\t\t\tb.numsSelected = arr\r\n\t\t\t}\r\n\t\t\treturn b\r\n\t\t})\r\n\r\n\t\tthis.setState({\r\n\t\t\tboards: boardList\r\n\t\t})\r\n\t}\r\n\r\n\tonKeyPress = (e) => {\r\n\t    if (e.which === 13 /* Enter */) {\r\n\t      e.preventDefault();\r\n\t      if (this.state.drawingStarted) {\r\n\t      \t this.closeDrawingTable()\r\n\t      }\r\n\t    }\t\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tlet lottoBoards = []\r\n\t\tconst { cash, cumulation, err, noMoney, winningNumbers, numbersDraw, peopleWon, cashWon, drawingStarted, boards} = this.state\r\n\r\n\t\tif (boards.length) {\r\n\r\n\t\t\tlottoBoards = boards.map( (board) =>\r\n\t\t\t\t(<LottoBoard key={board.id}\r\n\t\t\t\t\t\t\t click={this.removeBoard}\r\n\t\t\t\t\t\t\t nummousedown={this.handleNumMouseDown}\r\n\t\t\t\t\t\t\t selectrandom={this.selectRandom}\r\n\t\t\t\t\t\t\t {...board}\r\n\t\t\t\t/>)\r\n\t\t\t)\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"lotto\" >\r\n\t\t\t\t<div className=\"welcome-board\">\r\n\t\t\t\t\t<h1>Welcome to <span className=\"confirm\">It Lottoes Me</span> game</h1>\r\n\t\t\t\t\t<p>Please buy boards for drawing and fill them up. When filled up, please click 'Draw' button to start drawing. </p>\r\n\t\t\t\t\t<p>You can choose between 6, 10 and 15 numbers boards.</p>\r\n\t\t\t\t\t<p>If your numbers match:</p>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li>3 winning numbers - you get 10$</li>\r\n\t\t\t\t\t\t<li>4 winning numbers - you get 0.025% of cumulation</li>\r\n\t\t\t\t\t\t<li>5 winning numbers - you get 0.5% of cumulation</li>\r\n\t\t\t\t\t\t<li>6 winning numbers - you get 100% of cumulation divided by number of winning people</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<h2>Your budget is: {cash.toLocaleString()}$</h2>\r\n\t\t\t\t\t<p><strong><small>This time's cumulation is: {cumulation.toLocaleString()}$</small></strong></p>\r\n\t\t\t\t\t<button className=\"confirm\" onKeyPress={this.onKeyPress} \r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.startDrawing}>\r\n\t\t\t\t\t\tStart Drawing\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"danger\" onClick={this.handleRestartGame}>Restart Game</button>\r\n\t\t\t\t\t{err ? <p className=\"error\">{err}</p> : null}\r\n\t\t\t\t</div>\r\n\t\t\t\t<br />\r\n\t\t\t\t{lottoBoards}\r\n\t\t\t\t<AddNewBoardPanel noCash={noMoney ? \"1\" : null}\r\n\t\t\t\t\t\t\t \t  click={this.addNewBoard} \r\n\t\t\t\t\t\t\t\t  clickremove={this.removeAllBoards}\r\n\t\t\t\t/>\r\n\t\t\t\t{drawingStarted ? <ResultPanel close={this.closeDrawingTable} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  winningNums={winningNumbers}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  numbersDraw={numbersDraw}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  peopleWon={peopleWon} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  cashWon={cashWon}\r\n\t\t\t\t\t\t\t\t\t\t\t/> \r\n\t\t\t\t: null}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default LottoApp\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}